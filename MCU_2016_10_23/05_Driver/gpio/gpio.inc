#================================================================
#文件名称：gpio.inc
#功能概要：KL25 GPIO底层驱动构件（汇编）头文件
#版权所有：苏州大学NXP嵌入式中心(sumcu.suda.edu.cn)
#版本更新：2013-06-05 V1.0; 2016-03-03 V2.0
#================================================================

#端口号地址偏移量宏定义
.equ PTA_NUM,(0<<8)   
.equ PTB_NUM,(1<<8)    
.equ PTC_NUM,(2<<8)
.equ PTD_NUM,(3<<8)
.equ PTE_NUM,(4<<8)
#GPIO引脚方向宏定义
.equ GPIO_IN,(0)
.equ GPIO_OUTPUT,(1)
#GPIO引脚中断类型宏定义
.equ LOW_LEVEL,(8)      @低电平触发
.equ HIGH_LEVEL,(12)    @高电平触发
.equ RISING_EDGE,(9)    @上升沿触发
.equ FALLING_EDGE,(10)  @下降沿触发
.equ DOUBLE_EDGE,(11)   @双边沿触发

#引脚控制寄存器基地址宏定义(只给出PORTA的引脚控制寄存器PCR0的地址，其他由此计算）
.equ PORT_PCR_BASE,0x40049000      @PORTA的引脚控制寄存器PCR0的地址
#GPIO寄存器基地址宏定义(只给出PORTA的输出寄存器PDOR的地址，其他由此计算）
.equ PORT_GPIO,0x400ff000          @PORTA的输出寄存器PDOR的地址

#======================================================================
# 函数名称：gpio_init   
# 函数返回：无                
# 参数说明：r0:(端口号|(引脚号)),例:(PTB_NUM|(5u))表示B口5脚,头文件中有宏定义
#          r2:引脚方向（0=输入，1=输出,可用引脚方向宏定义）
#          r3:端口引脚初始状态（0=低电平，1=高电平）
# 功能概要：初始化指定端口引脚作为GPIO引脚功能，并定义为输入或输出，若是输出，
#           还指定初始状态是低电平或高电平
# 备    注：端口x的每个引脚控制寄存器PORTx_PCRn的地址=PORT_PCR_BASE+x*0x1000+n*4
#           其中：x=0~4，对应A~E；n=0~31
#======================================================================

#======================================================================
# 函数名称：gpio_set
# 函数返回：无
# 参数说明：r0:(端口号)|(引脚号),例:(PTB_NUM|(5u))表示B口5脚,头文件中有宏定义
#           r3：希望设置的端口引脚状态（0=低电平，1=高电平）
# 功能概要：当指定端口引脚被定义为GPIO功能且为输出时，本函数设定引脚状态
#======================================================================

#======================================================================
# 函数名称：gpio_get
# 函数返回：r2:指定端口引脚的状态（1或0）
# 参数说明：r0:(端口号)|(引脚号),例:(PTB_NUM|(5u))表示B口5脚,头文件中有宏定义
# 功能概要：当指定端口引脚被定义为GPIO功能且为输入时，本函数获取指定引脚状态
#======================================================================

#======================================================================
# 函数名称：gpio_reverse
# 函数返回：无
# 参数说明：r0:(端口号)|(引脚号),例:(PTB_NUM|(5u))表示B口5脚,头文件中有宏定义
# 功能概要：反转指定引脚状态
#======================================================================

#======================================================================
# 函数名称：gpio_pull
# 函数返回：无
# 参数说明：r0:(端口号)|(引脚号),例:(PTB_NUM|(5u))表示B口5脚,头文件中有宏定义
#           r3:引脚拉高低电平（ 0=拉低电平，1=拉高电平，2=关闭上下拉）
# 功能概要：使指定引脚上拉高电平、下拉低电平或关闭上下拉
#======================================================================

#================================================================
#函数名称：gpio_drive_strength
#函数返回：无
#参数说明：r0：(端口号)|(引脚号)例:(PTB_NUM|(5u))表示B口5脚,头文件中有宏定义
#          r3：控制引脚的驱动能力，0=正常驱动能力(5mA),默认
#                   1=高驱动能力(18mA),对KL25/KW01只有PTB0,PTB1,PTD6,PTD7可配
#功能概要：当指定端口引脚被定义为GPIO功能，设定引脚驱动能力
#备    注：引脚驱动能力是指引脚输入或输出电流的承受力，一般用mA单位度量
#================================================================

#======================================================================
# 函数名称：gpio_enable_int
# 函数返回：无
# 参数说明：r0:(端口号)|(引脚号),例:(PTB_NUM|(5u))表示B口5脚,头文件中有宏定义
#           r3:引脚中断类型，由宏定义给出，再次列举如下：
#                  LOW_LEVEL    8      低电平触发
#                  HIGH_LEVEL   12     高电平触发
#                  RISING_EDGE  9      上升沿触发
#                  FALLING_EDGE 10     下降沿触发
#                  DOUBLE_EDGE  11     双边沿触发
# 功能概要：当指定端口引脚被定义为GPIO功能且为输入时，本函数开启引脚中断，并设置
#           中断触发条件。
# 备    注：KL25芯片，只有PORTA、PORTD口具有GPIO类中断功能
#           KW01芯片，只有PORTA、PORTC、PORTD口具有GPIO类中断功能
#======================================================================

#======================================================================
# 函数名称：gpio_disable_int
# 函数返回：无
# 参数说明：r0:(端口号)|(引脚号),例:(PTB_NUM|(5u))表示B口5脚,头文件中有宏定义
# 功能概要：当指定端口引脚被定义为GPIO功能且为输入时，本函数关闭引脚中断
# 备    注：KL25芯片，只有PORTA、PORTD口具有GPIO类中断功能
#           KW01芯片，只有PORTA、PORTC、PORTD口具有GPIO类中断功能
#======================================================================


